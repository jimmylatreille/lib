# This is a basic workflow to help you get started with Actions

name: DEPLOY

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  #pull_request:
   # branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
       # run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
        #run: |
          # echo Add other actions to build,
          # echo test, and deploy your project.
  
      - name: EMCI.COM EMCI.ORG

        #FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ftp.ministryrevealed.com
          username: emcitv@ministryrevealed.com
          password: ${{ secrets.ftp_password }}
          port: 21
          local-dir: ./
          server-dir: /public_html/lib/
          #Prints which modifications will be made with current config 
          dry-run: true
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            fileToExclude.txt
            folder/.sync-state.json
          log-level: true



        #SFTP
        # uses: wlixcc/SFTP-Deploy-Action@v1.0
        # with:
        #   username: 'emcitv@ministryrevealed.com'
        #   server: 'ftp.ministryrevealed.com'
        #   ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
        #   local_path: './'
        #   port: '21'
        #   remote_path: '/public_html/lib/'
        #   args: '-o ConnectTimeout=5'
